{"version":3,"sources":["assets/SithEmblem.png","Loader/Loader.js","People/People.js","Vehicle/Vehicle.js","Planet/Planet.js","CardContainer/CardContainer.js","Starfield/Starfield.js","apiCalls.js","App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Loader","react_default","a","createElement","src","img","alt","className","People","props","name","species","homeworld","homeworldPop","onClick","favoriteItem","class","Vehicle","model","passengers","v","Planet","population","terrain","climate","residents","length","map","r","CardContainer","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","rendered","currentChoice","people","src_People_People","homeworldPopulation","planets","src_Planet_Planet","vehicles","src_Vehicle_Vehicle","vehicle_class","favorites","f","sfecies","lib_default","subTitle","movie","title","release_date","text","opening_crawl","Loader_Loader","Component","Starfield","index_es","style","position","width","height","fetchCalls","url","fetch","method","then","response","ok","json","Error","App","handleClick","e","target","textContent","setState","fetchPeople","data","results","isLoading","fetchHomeworlds","state","catch","err","arr","homeworlds","addHomeworldInfo","fetchSpecies","Promise","all","pop","addInfo","assign","addSpeciesInfo","addSpecies","fetchVehicles","addPlanetInfo","i","fetchResidents","reduce","acc","push","fetchPlanets","item","includes","removeFavorites","concat","toConsumableArray","newFaves","filter","_this2","sort","Math","random","Starfield_Starfield","border","src_CardContainer_CardContainer","react_router_dom","src_App_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6096c42f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SithEmblem.b68da5e8.png\";","import React from 'react';\nimport img from '../assets/SithEmblem.png';\nimport propTypes from 'prop-types';\n\nfunction Loader() {\n  return (\n    <div>\n      <img src={img} alt='sith logo' className='loader-img' />\n      <p className=\"loader-p\">Loading</p>\n    </div>\n  )\n}\n\nexport default Loader;","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst People = (props) => {\n  return (\n    <article className=\"Card\">\n      <h4>{props.name}</h4>\n      <h6>Species: {props.species}</h6>\n      <h6>Homeworld: {props.homeworld}</h6>\n      <h6>Homeworld Population: {props.homeworldPop}</h6>\n      <h6><i onClick={() => props.favoriteItem( props.p ) } class=\"far fa-star\"></i></h6>\n    </article>\n  )\n}\n\nPeople.propTypes = {\n  p: propTypes.object,\n  favoriteItem: propTypes.func,\n  name: propTypes.string,\n  species: propTypes.string,\n  homeworld: propTypes.string,\n  homeworldPop: propTypes.string\n}\n\nexport default People;","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Vehicle = (props) => {\n  return (\n    <div className=\"Card\">\n      <h4>{props.name}</h4>\n      <h6>Model: {props.model}</h6>\n      <h6>Class: {props.class}</h6>\n      <h6>Passenger Count: {props.passengers}</h6>\n      <h6><i onClick={() => props.favoriteItem( props.v ) } class=\"far fa-star\"></i></h6>\n    </div>\n  )\n}\n\nVehicle.propTypes = {\n  v: propTypes.object,\n  favoriteItem: propTypes.func,\n  name: propTypes.string,\n  model: propTypes.string,\n  passengers: propTypes.number,\n  class: propTypes.string\n}\n\nexport default Vehicle;","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Planet = (props) => {\n  return (\n    <article className=\"Card\">\n      <h4>{props.name}</h4>\n      <h6>Population: {props.population}</h6>\n      <h6>Terrain: {props.terrain}</h6>\n      <h6>Climate: {props.climate}</h6>\n      <h6>Residents: {props.residents.length === 0 ? ('Unknown') : props.residents.map(r => ' -' + r) }</h6>\n      <h6><i onClick={() => props.favoriteItem( props.p ) } class=\"far fa-star\"></i></h6>      \n    </article>\n  )\n}\n\nPlanet.propTypes = {\n  p: propTypes.object,\n  favoriteItem: propTypes.func,\n  name: propTypes.string,\n  population: propTypes.string,\n  terrain: propTypes.string,\n  residents: propTypes.array,\n  climate: propTypes.string\n}\n\nexport default Planet;","import React, { Component } from 'react';\nimport Crawl from 'react-star-wars-crawl';\nimport \"react-star-wars-crawl/lib/index.css\";\nimport Loader from '../Loader/Loader';\nimport People from '../People/People';\nimport Vehicle from '../Vehicle/Vehicle';\nimport Planet from '../Planet/Planet';\nimport propTypes from 'prop-types';\n\nclass CardContainer extends Component {\n  constructor( props ) {\n    super( props );\n  }\n\n  render() {\n    switch(this.props.rendered.currentChoice) {\n      case 'people':\n        return (\n        <section className=\"Card-Container\">\n          {this.props.rendered.people.map(p => {\n            return (\n                <People p={p} favoriteItem={this.props.favoriteItem} name={p.name} species={p.species} homeworld={p.homeworld} homeworldPop={p.homeworldPopulation} />\n                )\n              })\n            }\n        </section>\n        )\n      case 'planets':\n        return (\n          <section className=\"Card-Container\">\n            {this.props.rendered.planets.map(p => {\n              return (\n                <Planet p={p} favoriteItem={this.props.favoriteItem} name={p.name} population={p.population} terrain={p.terrain} residents={p.residents} climate={p.climate} />\n              )\n            })}\n          </section>\n        )\n      case 'vehicles':\n        return (\n          <section className=\"Card-Container\">\n            {this.props.rendered.vehicles.map(v => {\n              return (\n                <Vehicle v={v} favoriteItem={this.props.favoriteItem} name={v.name} model={v.model} passengers={v.passengers} class={v.vehicle_class} />\n              )\n            })}\n          </section>\n        )\n      case 'favorites':\n      if (this.props.rendered.favorites.length === 0) {\n        return (<h3 className=\"fave\">Favorite Some Items!</h3>)\n      }\n       else {\n       return ( <section className=\"Card-Container\">\n              { this.props.rendered.favorites.map(f => {\n              if (f.climate) {\n                return (\n                  <Planet name={f.name} population={f.population} terrain={f.terrain} residents={f.residents} climate={f.climate} />\n                )\n              }\n                else if (f.model) {\n                  return(\n                    <Vehicle name={f.name} model={f.model} passengers={f.passengers} class={f.vehicle_class} />\n                  )\n                }\n                else if (f.species) {\n                  return(\n                    <People name={f.name} sfecies={f.species} homeworld={f.homeworld} homeworldPop={f.homeworldPopulation} />\n                  )\n                }\n              } ) \n              }\n          </section>\n        )\n       }\n      case 'crawl':\n        return (<Crawl \n          subTitle={this.props.rendered.movie.title}\n          title={this.props.rendered.movie.release_date}\n          text={this.props.rendered.movie.opening_crawl}\n        />)\n      default:\n        return <Loader />\n    }\n  }\n}\n\nCardContainer.propTypes = {\n  rendered: propTypes.object,\n  favoriteItem: propTypes.func\n}\n\nexport default CardContainer;","import React from 'react'\n \nimport StarfieldAnimation from 'react-starfield-animation'\n \nfunction Starfield() {\n  return (\n    <StarfieldAnimation\n      style={{\n        position: 'absolute',\n        width: '100%',\n        height: '100%'\n      }}\n    />\n  )\n}\n\nexport default Starfield;","const fetchCalls = url => {\n  return fetch (url, {\n      method: 'GET'\n\n  })\n  .then(response => {\n    if (!response.ok) {\n      throw Error('Error fetching data')\n    } else {\n      return response.json()\n    }\n  })\n}\n\nexport { fetchCalls }","import React, { Component } from 'react';\nimport Loader from '../Loader/Loader'\nimport CardContainer from '../CardContainer/CardContainer';\nimport Starfield from '../Starfield/Starfield'\nimport propTypes from 'prop-types';\nimport { fetchCalls } from '../apiCalls';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      movie: {},\n      people: [],\n      planets: [], \n      vehicles: [],\n      favorites: [],\n      currentChoice: '',\n    }\n  }\n\n  componentDidMount() {\n    const movieUrl = 'https://swapi.co/api/films/';\n    return fetchCalls(movieUrl)\n      .then(data => data.results.sort(() => 0.5 - Math.random()).pop()  )\n      .then(movie => this.setState( { movie } ) )\n      .then(() =>  this.fetchPeople())\n      .then(() => this.fetchVehicles())\n      .then(() => this.fetchPlanets())\n  }\n\n  handleClick = (e) => {\n    switch(e.target.textContent) {\n      case 'people' :\n        this.setState( { currentChoice: 'people' } )\n      break;\n      case 'vehicles':\n        this.setState( { currentChoice: 'vehicles' } )\n      break;\n      case 'planets':\n        this.setState( { currentChoice: 'planets' } )\n      break;\n      case 'crawl':\n        this.setState( { currentChoice: 'crawl' } )\n      break;\n      default:\n        this.setState( { currentChoice: 'favorites' } )\n    }\n  }\n\n  fetchPeople = () => {\n    const peopleUrl = 'https://swapi.co/api/people/';\n    return fetchCalls(peopleUrl)\n      .then(data => this.setState( { people: data.results, isLoading: false, currentChoice: 'crawl' } ) )\n      .then(() => this.fetchHomeworlds(this.state.people))\n      .catch(err => { throw new Error(err) } );\n  }\n\n  fetchHomeworlds = (arr) => {\n    let homeworlds = arr.map(p => {\n      return fetchCalls(p.homeworld)\n        .then(data => this.addHomeworldInfo(data.name, data.population) )\n        .catch(err => { throw new Error(err) } )\n    })\n    this.fetchSpecies(this.state.people);\n    return Promise.all(homeworlds)\n  }\n\n  addHomeworldInfo = (name, pop) => {\n    const addInfo = { homeworld:name, homeworldPopulation: pop }\n    const people = this.state.people.map(p => {\n      return Object.assign(p, addInfo)\n    })\n    this.setState( { people } )\n  }\n\n  fetchSpecies = (arr) => {\n    let species = arr.map(p => {\n      return fetchCalls(p.species)\n        .then(data => this.addSpeciesInfo(data.name ) )\n        .catch(err => { throw new Error(err) } )\n    })\n    return Promise.all(species)\n  }\n\n  addSpeciesInfo = (species) => {\n    const addSpecies = {species:species}\n    const people = this.state.people.map(p => {\n      return Object.assign(p, addSpecies)\n    })\n    this.setState( {people } );\n  }\n\n  fetchVehicles = () => {\n    const vehicleUrl = 'https://swapi.co/api/vehicles/';\n    return fetchCalls(vehicleUrl)\n      .then(data => this.setState( {vehicles: data.results} ) )\n      .catch(err => { throw new Error(err) } )\n  }\n\n  addPlanetInfo = (arr) => {\n    let planets = this.state.planets.map((p, i) => {\n        return Object.assign(p, { residents: arr[i] } )\n    })\n    this.setState( { planets } )\n  }\n\n  fetchResidents = (arr) => {\n    let residents = arr.map(p => {\n      return p.residents.reduce((acc, r) => {\n        fetchCalls(r)\n        .then(data => acc.push( data.name ) )\n        .catch(err => { throw new Error(err) } ) \n        return acc\n      }, [] )\n    })\n    this.addPlanetInfo(residents);\n    return Promise.all(residents);\n  }\n\n  fetchPlanets = () => {\n    const planetUrl = 'https://swapi.co/api/planets/';\n    return fetchCalls(planetUrl)\n      .then(data => this.setState( { planets: data.results } ) )\n      .then(() => this.fetchResidents(this.state.planets) )\n      .catch(err => { throw new Error(err) } )\n  }\n\n  favoriteItem = (item) => {\n    if (!this.state.favorites.includes(item)) {\n      const { favorites } = this.state;\n      this.setState( { favorites: [...favorites, item] } );\n    } else {\n      this.removeFavorites(item.name)\n    }\n  }\n\n  removeFavorites = (name) => {\n    const newFaves = this.state.favorites.filter(f => f.name !== name)\n    this.setState( { favorites: newFaves } )\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n      <Starfield className=\"Starfield\" />\n        <h1 className=\"header\"><img src=\"https://fontmeme.com/permalink/190502/5dfed28f102f9d81a68ccee2d51fa26a.png\" alt=\"swapiboxi\" border=\"0\" />\n        </h1>\n        <nav>\n          <button className=\"people\" onClick={this.handleClick} >people</button>\n          <button className=\"planets\" onClick={this.handleClick} >planets</button>\n          <button className=\"vehicles\" onClick={this.handleClick} >vehicles</button>\n          <button className=\"favorites\" onClick={this.handleClick} >favorites<span className=\"fave-count\">{this.state.favorites.length}</span></button>\n        </nav>\n        {\n          this.state.isLoading === true ? \n          <Loader /> : \n          <CardContainer rendered={this.state} favoriteItem={this.favoriteItem} />\n        }\n      </div>\n    );\n  }\n}\n\n\n\nApp.propTypes = {\n  people: propTypes.array,\n  isLoading: propTypes.bool,\n  movie: propTypes.object,\n  planets: propTypes.array,\n  vehicles: propTypes.array,\n  favorites: propTypes.array,\n  currentChoice: propTypes.string\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/Scss/index.scss';\nimport App from '../src/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}